; Test pour savoir si la pile est pleine
	TSTO #19
	BOV pile_pleine
	ADDSP #17
; start main program
; Class Declaration
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 14(GB)
	LOAD code.Object.equals, R0
	STORE R0, 15(GB)
; Main Function
; Declaration des variables
; >=
	LOAD #0, R2
	LOAD #1, R3
	CMP R3, R2
<<<<<<< HEAD
	STORE R2, 3(GB)
=======
	STORE R2, 16(GB)
>>>>>>> 645423c5a5200285d2d288475bba4fa2fada735a
; Beginning of main instructions:
; &&
; ||
; !
	LOAD 16(GB), R2
	SUB #1, R2
	LOAD #1, R3
	ADD R3, R2
	SHR R2
; ||
	LOAD #0, R3
	LOAD #1, R4
	ADD R4, R3
	SHR R3
	MUL R3, R2
<<<<<<< HEAD
	STORE R2, 3(GB)
=======
	STORE R2, 16(GB)
>>>>>>> 645423c5a5200285d2d288475bba4fa2fada735a
	HALT
code.Object.equals:
pile_pleine:
	WSTR "Erreur : Pile pleine."
	WNL
	ERROR
dereferencement_null:
	WSTR "Erreur : dereferencement null."
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : Tas plein."
	WNL
	ERROR
debordement:
	WSTR "Erreur : debordement durant une operation arithmétique"
	WNL
	ERROR
io_error:
	WSTR "Erreur : input ou output"
	WNL
	ERROR
; end main program
