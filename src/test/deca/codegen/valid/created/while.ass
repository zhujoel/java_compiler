; start main program
; Main program
; On stocke la valeur "null" à la première case de la pile.
	LOAD #null, R0
	STORE R0, 1(GB)
; Beginning of main instructions:
; Test pour savoir si la pile est pleine
	TSTO #3
	ADDSP #3
; Declaration des variables
	LOAD #0, R0
	STORE R0, 2(GB)
; Instructions
Begin_While_0:
; <
	LOAD 2(GB), R0
	LOAD #5, R1
	CMP R0, R1
	BGE End_While_0
; Instructions du while_0
; +
	LOAD 2(GB), R1
	LOAD #1, R2
	ADD R1, R2
	STORE R1, 2(GB)
	LOAD 2(GB), R1
	WINT
	WNL
; Fin Instructions du while_0
	BRA Begin_While_0
End_While_0:
Begin_While_1:
; !=
	LOAD 2(GB), R2
	LOAD #10, R3
	CMP R2, R3
	BEQ End_While_1
; Instructions du while_1
; +
	LOAD 2(GB), R3
	LOAD #1, R4
	ADD R3, R4
	STORE R3, 2(GB)
	LOAD 2(GB), R1
	WINT
	WNL
; Fin Instructions du while_1
	BRA Begin_While_1
End_While_1:
Begin_While_2:
; ==
	LOAD 2(GB), R4
	LOAD #10, R5
	CMP R4, R5
	BNE End_While_2
; Instructions du while_2
; +
	LOAD 2(GB), R5
	LOAD #1, R6
	ADD R5, R6
	STORE R5, 2(GB)
	LOAD 2(GB), R1
	WINT
	WNL
; Fin Instructions du while_2
	BRA Begin_While_2
End_While_2:
Begin_While_3:
; >
	LOAD 2(GB), R6
	LOAD #50, R7
	CMP R6, R7
	BLE End_While_3
; Instructions du while_3
; +
	LOAD 2(GB), R7
	LOAD #1, R8
	ADD R7, R8
	STORE R7, 2(GB)
	LOAD 2(GB), R1
	WINT
	WNL
; Fin Instructions du while_3
	BRA Begin_While_3
End_While_3:
	HALT
; end main program
