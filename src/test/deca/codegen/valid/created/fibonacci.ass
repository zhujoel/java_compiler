; Test pour savoir si la pile est pleine
	TSTO #9
	BOV pile_pleine
	ADDSP #7
; start main program
; Class Declaration
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Main Function
; Declaration des variables
	LOAD #10, R2
	STORE R2, 3(GB)
	LOAD #1, R2
	STORE R2, 4(GB)
	LOAD #2, R2
	STORE R2, 5(GB)
	LOAD #3, R2
	STORE R2, 6(GB)
; Beginning of main instructions:
Begin_While_1:
; >=
	LOAD 3(GB), R2
	LOAD #0, R3
	CMP R3, R2
	BLT End_While_1
; +
	LOAD 4(GB), R2
	LOAD 5(GB), R3
	ADD R3, R2
	BOV debordement
	STORE R2, 6(GB)
	LOAD 5(GB), R2
	STORE R2, 4(GB)
	LOAD 6(GB), R2
	STORE R2, 5(GB)
	LOAD 6(GB), R1
	WINT
	WNL
; -
	LOAD 3(GB), R2
	LOAD #1, R3
	SUB R3, R2
	BOV debordement
	STORE R2, 3(GB)
	BRA Begin_While_1
End_While_1:
	HALT
code.Object.equals:
pile_pleine:
	WSTR "Erreur : Pile pleine."
	WNL
	ERROR
dereferencement_null:
	WSTR "Erreur : dereferencement null."
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : Tas plein."
	WNL
	ERROR
debordement:
	WSTR "Erreur : debordement durant une operation arithmétique"
	WNL
	ERROR
io_error:
	WSTR "Erreur : input ou output"
	WNL
	ERROR
; end main program
