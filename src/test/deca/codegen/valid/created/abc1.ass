; Test pour savoir si la pile est pleine
	TSTO #35
	BOV pile_pleine
	ADDSP #33
; start main program
; Class Declaration
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
; Main Function
; Declaration des variables
	LOAD #0, R0
	STORE R0, 6(GB)
	LOAD #0, R0
	STORE R0, 9(GB)
	LOAD #0, R0
	STORE R0, 10(GB)
	LOAD #0, R0
	STORE R0, 11(GB)
	LOAD #0, R0
	STORE R0, 12(GB)
	LOAD #0, R0
	STORE R0, 13(GB)
	LOAD #0x0.0p0, R0
	STORE R0, 14(GB)
	LOAD #0x0.0p0, R0
	STORE R0, 15(GB)
	LOAD #0x0.0p0, R0
	STORE R0, 16(GB)
	LOAD #0x0.0p0, R0
	STORE R0, 17(GB)
	LOAD #0x0.0p0, R0
	STORE R0, 18(GB)
; Beginning of main instructions:
	LOAD #54, R2
	STORE R2, 6(GB)
	LOAD #78987, R2
	STORE R2, 9(GB)
	LOAD #875, R2
	STORE R2, 10(GB)
	LOAD #99982, R2
	STORE R2, 12(GB)
; *
<<<<<<< HEAD
	LOAD 3(GB), R2
	LOAD #96, R3
	MUL R3, R2
	BOV debordement
	FLOAT R2, R2
	STORE R2, 9(GB)
; +
; *
	LOAD 9(GB), R2
	LOAD #7784, R3
	FLOAT R3, R3
	MUL R3, R2
	BOV debordement
	LOAD 7(GB), R3
	FLOAT R3, R3
	ADD R3, R2
=======
	LOAD 6(GB), R2
	PUSH R2
	LOAD #96, R2
	MUL R2, R2
	BOV debordement
	POP R2
	FLOAT R2, R2
	STORE R2, 14(GB)
; +
; *
	LOAD 14(GB), R2
	PUSH R2
	LOAD #7784, R2
	FLOAT R2, R2
	MUL R2, R2
	BOV debordement
	POP R2
	LOAD 12(GB), R2
	FLOAT R2, R2
	ADD R2, R2
>>>>>>> 645423c5a5200285d2d288475bba4fa2fada735a
	BOV debordement
	STORE R2, 15(GB)
; +
<<<<<<< HEAD
	LOAD 4(GB), R2
	LOAD 5(GB), R3
	ADD R3, R2
	BOV debordement
	FLOAT R2, R2
	STORE R2, 11(GB)
; +
; +
	LOAD 6(GB), R2
	LOAD 7(GB), R3
	ADD R3, R2
	BOV debordement
	FLOAT R2, R2
	LOAD 11(GB), R3
	ADD R3, R2
=======
	LOAD 9(GB), R2
	PUSH R2
	LOAD 10(GB), R2
	ADD R2, R2
	BOV debordement
	POP R2
	FLOAT R2, R2
	STORE R2, 16(GB)
; +
; +
	LOAD 11(GB), R2
	PUSH R2
	LOAD 12(GB), R2
	ADD R2, R2
>>>>>>> 645423c5a5200285d2d288475bba4fa2fada735a
	BOV debordement
	POP R2
	FLOAT R2, R2
	LOAD 16(GB), R2
	ADD R2, R2
	BOV debordement
	STORE R2, 14(GB)
; +
; +
; +
<<<<<<< HEAD
	LOAD 3(GB), R2
	LOAD 4(GB), R3
	ADD R3, R2
	BOV debordement
	LOAD 5(GB), R3
	ADD R3, R2
	BOV debordement
	LOAD 7(GB), R3
	ADD R3, R2
	BOV debordement
	STORE R2, 8(GB)
; *
	LOAD 8(GB), R2
	LOAD 8(GB), R3
	MUL R3, R2
	BOV debordement
	FLOAT R2, R2
	STORE R2, 13(GB)
=======
	LOAD 6(GB), R2
	PUSH R2
	LOAD 9(GB), R2
	ADD R2, R2
	BOV debordement
	POP R2
	LOAD 10(GB), R2
	ADD R2, R2
	BOV debordement
	LOAD 12(GB), R2
	ADD R2, R2
	BOV debordement
	STORE R2, 13(GB)
; *
	LOAD 13(GB), R2
	PUSH R2
	LOAD 13(GB), R2
	MUL R2, R2
	BOV debordement
	POP R2
	FLOAT R2, R2
	STORE R2, 18(GB)
>>>>>>> 645423c5a5200285d2d288475bba4fa2fada735a
	HALT
code.Object.equals:
pile_pleine:
	WSTR "Erreur : Pile pleine."
	WNL
	ERROR
dereferencement_null:
	WSTR "Erreur : dereferencement null."
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : Tas plein."
	WNL
	ERROR
debordement:
	WSTR "Erreur : debordement durant une operation arithmétique"
	WNL
	ERROR
io_error:
	WSTR "Erreur : input ou output"
	WNL
	ERROR
; end main program
