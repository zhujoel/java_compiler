; Test pour savoir si la pile est pleine
	TSTO #21
	BOV pile_pleine
	ADDSP #19
; start main program
; Class Declaration
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 2(GB)
	LOAD code.Object.equals, R0
	STORE R0, 13(GB)
; Main Function
; Declaration des variables
	LOAD #5, R2
	STORE R2, 14(GB)
	LOAD #2, R2
	STORE R2, 15(GB)
	LOAD #0x0.0p0, R0
	STORE R0, 16(GB)
	LOAD #0x0.0p0, R0
	STORE R0, 17(GB)
; Beginning of main instructions:
; /
	LOAD #5, R2
	LOAD #2, R3
	QUO R2, R3
; /
	LOAD 14(GB), R2
	LOAD 15(GB), R4
	QUO R2, R4
; /
<<<<<<< HEAD
	LOAD 3(GB), R2
	LOAD 4(GB), R5
	QUO R5, R2
	STORE R2, 3(GB)
; /
	LOAD 3(GB), R2
	LOAD 4(GB), R5
=======
	LOAD 14(GB), R2
	LOAD 15(GB), R5
	QUO R5, R2
	STORE R2, 14(GB)
; /
	LOAD 14(GB), R2
	LOAD 15(GB), R5
>>>>>>> 645423c5a5200285d2d288475bba4fa2fada735a
	QUO R5, R2
	LOAD R2, R1
	WINT
	LOAD #0x1.59999ap1, R5
<<<<<<< HEAD
	STORE R5, 5(GB)
	LOAD #0x1.0p0, R5
	STORE R5, 6(GB)
=======
	STORE R5, 16(GB)
	LOAD #0x1.0p0, R5
	STORE R5, 17(GB)
>>>>>>> 645423c5a5200285d2d288475bba4fa2fada735a
; /
	LOAD #0x1.59999ap1, R5
	LOAD #0x1.0p0, R6
	DIV R5, R6
; /
<<<<<<< HEAD
	LOAD 5(GB), R5
	LOAD 6(GB), R7
	DIV R7, R5
	STORE R5, 5(GB)
; /
	LOAD 5(GB), R5
	LOAD 6(GB), R7
=======
	LOAD 16(GB), R5
	LOAD 17(GB), R7
	DIV R7, R5
	STORE R5, 16(GB)
; /
	LOAD 16(GB), R5
	LOAD 17(GB), R7
>>>>>>> 645423c5a5200285d2d288475bba4fa2fada735a
	DIV R7, R5
	LOAD R5, R1
	WINT
	HALT
code.Object.equals:
pile_pleine:
	WSTR "Erreur : Pile pleine."
	WNL
	ERROR
dereferencement_null:
	WSTR "Erreur : dereferencement null."
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : Tas plein."
	WNL
	ERROR
debordement:
	WSTR "Erreur : debordement durant une operation arithmétique"
	WNL
	ERROR
io_error:
	WSTR "Erreur : input ou output"
	WNL
	ERROR
; end main program
