; Test pour savoir si la pile est pleine
	TSTO #8
	BOV pile_pleine
	ADDSP #6
; start main program
; Class Declaration
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Main Function
; Declaration des variables
	LOAD #2, R2
	STORE R2, 3(GB)
	LOAD #0, R0
	STORE R0, 4(GB)
	LOAD #0x0.0p0, R0
	STORE R0, 5(GB)
; Beginning of main instructions:
; Début du if_1
; ==
	LOAD 3(GB), R2
	LOAD #2, R3
	CMP R3, R2
	BNE else_1
; Contenu du if_1
	WSTR "a est égal à deux."
	WNL
	BRA endif_1
else_1:
	WSTR "a est différent de deux."
	WNL
endif_1:
	LOAD #0, R2
	STORE R2, 4(GB)
; Début du if_2
	LOAD 4(GB), R2
	CMP #1, R2
	BNE else_2
; Contenu du if_2
	WSTR "b vaut true"
	WNL
	BRA endif_2
else_2:
	WSTR "b vaut false"
	WNL
endif_2:
	LOAD #0x1.4cccccp2, R3
	STORE R3, 5(GB)
; Début du if_3
; ==
	LOAD 5(GB), R3
	LOAD #0x1.4cccccp2, R4
	CMP R4, R3
	BNE else_3
; Contenu du if_3
	WSTR "c vaut 5.2"
	WNL
	BRA endif_3
else_3:
	WSTR "c est différent de 5.2"
	WNL
endif_3:
	HALT
code.Object.equals:
pile_pleine:
	WSTR "Erreur : Pile pleine."
	WNL
	ERROR
dereferencement_null:
	WSTR "Erreur : dereferencement null."
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : Tas plein."
	WNL
	ERROR
debordement:
	WSTR "Erreur : debordement durant une operation arithmétique"
	WNL
	ERROR
io_error:
	WSTR "Erreur : input ou output"
	WNL
	ERROR
; end main program
