; Test pour savoir si la pile est pleine
	TSTO #8
	BOV pile_pleine
	ADDSP #6
; start main program
; Class Declaration
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Main Function
; Declaration des variables
	LOAD #0, R2
	STORE R2, 3(GB)
	LOAD #1, R2
	STORE R2, 4(GB)
	LOAD #0, R2
	STORE R2, 5(GB)
; Beginning of main instructions:
Begin_While_1:
; &&
; ||
	LOAD 3(GB), R2
	CMP #1, R2
	BEQ Fin_or_1
	LOAD 4(GB), R3
	CMP #1, R3
	BNE End_While_1
Fin_or_1:
; <
	LOAD 5(GB), R4
	LOAD #10, R5
	CMP R5, R4
	BGE End_While_1
	WSTR "a vaut true"
	WNL
; +
	LOAD 5(GB), R4
	LOAD #1, R5
	ADD R5, R4
	BOV debordement
	STORE R4, 5(GB)
	BRA Begin_While_1
End_While_1:
	HALT
code.Object.equals:
pile_pleine:
	WSTR "Erreur : Pile pleine."
	WNL
	ERROR
dereferencement_null:
	WSTR "Erreur : dereferencement null."
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : Tas plein."
	WNL
	ERROR
debordement:
	WSTR "Erreur : debordement durant une operation arithmétique"
	WNL
	ERROR
io_error:
	WSTR "Erreur : input ou output"
	WNL
	ERROR
; end main program
