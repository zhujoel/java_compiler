; Test pour savoir si la pile est pleine
	TSTO #18
	BOV pile_pleine
	ADDSP #16
; start main program
; Class Declaration
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 10(GB)
	LOAD code.Object.equals, R0
	STORE R0, 11(GB)
; Main Function
; Declaration des variables
	LOAD #5, R2
	STORE R2, 12(GB)
	LOAD #2, R2
	STORE R2, 13(GB)
	LOAD #0x0.0p0, R0
	STORE R0, 14(GB)
	LOAD #0x0.0p0, R0
	STORE R0, 15(GB)
; Beginning of main instructions:
; *
	LOAD 12(GB), R2
	LOAD 13(GB), R3
	MUL R2, R3
; *
	LOAD #6, R2
	PUSH R3
	LOAD #1, R3
	MUL R2, R3
; *
	LOAD 12(GB), R2
	PUSH R3
	LOAD 13(GB), R3
	MUL R3, R2
	POP R3
	LOAD R2, R1
	WINT
; *
	LOAD 12(GB), R3
	PUSH R3
	LOAD 13(GB), R3
	MUL R3, R3
	POP R3
	STORE R3, 12(GB)
	POP R3
; *
	LOAD #5, R3
	PUSH R3
	LOAD #2, R3
	MUL R3, R3
	POP R3
	LOAD R3, R1
	WINT
	LOAD #5, R3
	FLOAT R3, R3
	STORE R3, 14(GB)
	LOAD #2, R3
	FLOAT R3, R3
	STORE R3, 15(GB)
; *
	LOAD 14(GB), R3
	PUSH R3
	LOAD 15(GB), R3
	MUL R3, R3
	POP R3
; *
	LOAD #0x1.8p2, R3
	PUSH R3
	LOAD #0x1.0p0, R3
	MUL R3, R3
	POP R3
; *
	LOAD 14(GB), R3
	PUSH R3
	LOAD 15(GB), R3
	MUL R3, R3
	POP R3
	LOAD R3, R1
	WINT
; *
	LOAD 14(GB), R3
	PUSH R3
	LOAD 15(GB), R3
	MUL R3, R3
	POP R3
	STORE R3, 14(GB)
; *
	LOAD #0x1.4p2, R3
	PUSH R3
	LOAD #0x1.0p1, R3
	MUL R3, R3
	POP R3
	LOAD R3, R1
	WINT
	HALT
code.Object.equals:
pile_pleine:
	WSTR "Erreur : Pile pleine."
	WNL
	ERROR
dereferencement_null:
	WSTR "Erreur : dereferencement null."
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : Tas plein."
	WNL
	ERROR
debordement:
	WSTR "Erreur : debordement durant une operation arithmétique"
	WNL
	ERROR
io_error:
	WSTR "Erreur : input ou output"
	WNL
	ERROR
; end main program
