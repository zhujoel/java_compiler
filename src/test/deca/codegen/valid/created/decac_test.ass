; Test pour savoir si la pile est pleine
	TSTO #8
	BOV pile_pleine
	ADDSP #6
; start main program
; Class Declaration
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
; Code de la table des méthodes de A
	LEA 1(GB), R0
	STORE R0, 7(GB)
	LOAD code.Object.equals, R0
<<<<<<< HEAD
	STORE R0, 9(GB)
init.A:
	TSTO #0
	BOV tas_plein
	NEW #0, R2
	RTS
init.A:
	TSTO #0
	BOV tas_plein
	NEW #0, R3
	RTS
; Main Function
; Test pour savoir si la pile est pleine
	TSTO #3
	BOV pile_pleine
	ADDSP #3
; Declaration des variables
	RINT
	BOV io_error
	STORE R1, 18(GB)
; Beginning of main instructions:
; +
	LOAD #5, R4
	LOAD #7, R5
	ADD R4, R5
	BOV debordement
	HALT
=======
	STORE R0, 4(GB)
; Main Function
; Declaration des variables
	RINT
	BOV io_error
	STORE R1, 5(GB)
; Beginning of main instructions:
; +
	LOAD #5, R3
	LOAD #7, R4
	ADD R3, R4
	BOV debordement
	HALT
code.Object.equals:
init.A:
	TSTO #0
	BOV tas_plein
	NEW #0, R2
	RTS
>>>>>>> c423b6d2167ba364dc50207abb16cf5dd4ebba6e
pile_pleine:
	WSTR "Erreur : Pile pleine."
	WNL
	ERROR
dereferencement_null:
	WSTR "Erreur : dereferencement null."
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : Tas plein."
	WNL
	ERROR
debordement:
	WSTR "Erreur : debordement durant une operation arithmétique"
	WNL
	ERROR
io_error:
	WSTR "Erreur : input ou output"
	WNL
	ERROR
; end main program
